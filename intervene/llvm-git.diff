diff --git a/PKGBUILD b/PKGBUILD
index 6afead9..66b5b46 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -15,26 +15,30 @@
 # Contributor: Tomas Wilhelmsson <tomas.wilhelmsson@gmail.com>
 
 
+# pin commit that passes Debian/Ubuntu expensive CI checks
+_commit=4b8e55cb04e68053a80f4ee26f4efbf08fe30b02
+
 pkgname=('llvm-git' 'llvm-libs-git' 'llvm-ocaml-git')
-pkgver=18.0.0_r479038.d16d149e3d96
+pkgver=19.0.0.r487592.g4b8e55cb04e6
 pkgrel=1
 arch=('x86_64')
 url="https://llvm.org/"
-license=('custom:Apache 2.0 with LLVM Exception')
+license=('Apache-2.0 WITH LLVM-exception')
 makedepends=('git' 'cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2' 
              'python-setuptools' 'lldb' 'ocaml' 'ocaml-ctypes' 'ocaml-findlib'
              'python-sphinx' 'python-recommonmark' 'swig' 'python' 'python-six'
              'python-myst-parser' 'lua53' 'ocl-icd' 'opencl-headers' 'z3'
              'jsoncpp' 'ocaml-stdlib-shims')
 checkdepends=("python-psutil")
-source=("llvm-project::git+https://github.com/llvm/llvm-project.git"
+source=("llvm-project::git+https://github.com/llvm/llvm-project.git#commit=${_commit}"
         "llvm-config.h")
 
 md5sums=('SKIP'
          '295c343dcd457dc534662f011d7cff1a')
 sha512sums=('SKIP'
             '75e743dea28b280943b3cc7f8bbb871b57d110a7f2b9da2e6845c1c36bf170dd883fca54e463f5f49e0c3effe07fbd0db0f8cf5a12a2469d3f792af21a73fcdd')
-options=('staticlibs')
+# If someone wants LTO, prefer ThinLTO over Full LTO unless someone has >= 64 GB RAM
+options=('staticlibs' '!lto')
 
 # NINJAFLAGS is an env var used to pass commandline options to ninja
 # NOTE: It's your responbility to validate the value of $NINJAFLAGS. If unsure, don't set it.
@@ -56,11 +60,19 @@ pkgver() {
             'BEGIN { ORS="." ; i=0 } \
              /set\(LLVM_VERSION_/ { print $2 ; i++ ; if (i==2) ORS="" } \
              END { print "\n" }' \
-             CMakeLists.txt)_r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
+             CMakeLists.txt).r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)
     echo "$_pkgver"
 }
 
 build() {
+    local _bootstrap_options=(
+        "-DCMAKE_AR=/usr/bin/llvm-ar"
+        "-DCMAKE_C_COMPILER=clang"
+        "-DCMAKE_CXX_COMPILER=clang++"
+        "-DCMAKE_RANLIB=/usr/bin/llvm-ranlib"
+        "-DLLVM_ENABLE_LTO=Thin"
+        "-DLLVM_USE_LINKER=lld"
+    )
     
     export CFLAGS+=" ${CPPFLAGS}"
     export CXXFLAGS+=" ${CPPFLAGS}"
@@ -68,6 +80,7 @@ build() {
         -B _build \
         -S "$srcdir"/llvm-project/llvm  \
         -G Ninja \
+        ${_bootstrap:+"${_bootstrap_options[@]}"} \
         -D CMAKE_BUILD_TYPE=Release \
         -D CMAKE_INSTALL_PREFIX=/usr \
         -D LLVM_BINUTILS_INCDIR=/usr/include \
@@ -77,6 +90,7 @@ build() {
         -D LLVM_ENABLE_RTTI=ON \
         -D LLVM_ENABLE_FFI=ON \
         -D FFI_INCLUDE_DIR:PATH="$(pkg-config --variable=includedir libffi)" \
+        -D LLVM_ENABLE_Z3_SOLVER=ON \
         -D LLVM_BUILD_LLVM_DYLIB=ON \
         -D LLVM_LINK_LLVM_DYLIB=ON \
         -D LLVM_INSTALL_UTILS=ON \
@@ -85,8 +99,6 @@ build() {
         -D LLVM_ENABLE_SPHINX=ON \
         -D SPHINX_OUTPUT_HTML:BOOL=OFF \
         -D SPHINX_WARNINGS_AS_ERRORS=OFF \
-        -D POLLY_ENABLE_GPGPU_CODEGEN=ON \
-        -D LLDB_USE_SYSTEM_SIX=1 \
         -D LLVM_ENABLE_PROJECTS="polly;lldb;lld;compiler-rt;clang-tools-extra;clang" \
         -D LLVM_LIT_ARGS="-sv --ignore-fail" \
         -D LLVM_ENABLE_DUMP=ON \
@@ -97,6 +109,9 @@ build() {
 }
 
 check() {
+    # https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/4440053c6a7ca40e36b4703c86b3d2fc84aa3f55/PKGBUILD#L100
+    export LD_LIBRARY_PATH=$PWD/_build/lib
+
     ninja -C _build $NINJAFLAGS check-llvm
     ninja -C _build $NINJAFLAGS check-clang
     ninja -C _build $NINJAFLAGS check-clang-tools
@@ -107,10 +122,23 @@ check() {
 
 package_llvm-git() {
     pkgdesc="LLVM development version. includes clang and many other tools"
-    depends=("llvm-libs-git=$pkgver-$pkgrel" 'perl')
+    depends=(
+        "llvm-libs-git=${pkgver}-${pkgrel}"
+        'gcc-libs'
+        'glibc'
+        'libedit' 'libedit.so'
+        'libxml2' 'libxml2.so'
+        'lua53'
+        'ncurses' 'libncursesw.so' 'libpanelw.so'
+        'perl'
+        'xz' 'liblzma.so'
+        'zlib' 'libz.so'
+        'zstd' 'libzstd.so'
+    )
     optdepends=('python: for scripts')
+    # workaround some awkward stuffs from attempting to build LLVM components with itself
     provides=(aur-llvm-git compiler-rt-git clang-git lldb-git lld-git polly-git
-              llvm compiler-rt clang lldb polly lld )
+              llvm compiler-rt clang lldb polly lld clang-minimal-git llvm-minimal-git)
     # A package always provides itself, so there's no need to provide llvm-git
     conflicts=('llvm' 'compiler-rt' 'clang' 'lldb' 'polly' 'lld')
     
@@ -170,8 +198,19 @@ package_llvm-git() {
 
 package_llvm-libs-git() {
     pkgdesc="runtime libraries for llvm-git"
-    depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses' 'libxml2' 'z3' 'lua53')
-    provides=(aur-llvm-libs-git llvm-libs)
+    depends=(
+        'gcc-libs'
+        'glibc'
+        'libedit' 'libedit.so'
+        'libffi' 'libffi.so'
+        'libxml2' 'libxml2.so'
+        'ncurses' 'libncursesw.so'
+        'z3' 'libz3.so'
+        'zlib' 'libz.so'
+        'zstd' 'libzstd.so'
+    )
+    # workaround some awkward stuffs from attempting to build LLVM components with itself
+    provides=(aur-llvm-libs-git llvm-libs clang-libs-minimal-git llvm-libs-minimal-git)
     conflicts=('llvm-libs')
 
     install -d "$pkgdir"/usr/lib
