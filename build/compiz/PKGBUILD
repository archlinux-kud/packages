# Maintainer: Charles Bos <charlesbos1 AT gmail>
# Contributor: Rob McCathie <archaur at rmcc dot com dot au

pkgname=compiz
pkgver=0.9.14.2
pkgrel=5
epoch=1
pkgdesc="Composite manager for Aiglx and Xgl, with plugins and CCSM"
arch=('i686' 'x86_64')
url="https://launchpad.net/compiz"
license=(
  'GPL-2.0-or-later'
  'LGPL-2.1-or-later'
  'MIT'
)
depends=(
  'at-spi2-core' 'libatk-1.0.so'
  'bash'
  'boost-libs'
  'cairo' 'libcairo.so'
  'dconf'
  'dbus' 'libdbus-1.so'
  'fuse2'
  'gcc-libs'
  'gdk-pixbuf2' 'libgdk_pixbuf-2.0.so'
  'glib2' 'libgio-2.0.so' 'libglib-2.0.so' 'libgobject-2.0.so'
  'glibc'
  'glibmm' 'libglibmm-2.4.so'
  'glu'
  'gtk3' 'libgdk-3.so' 'libgtk-3.so'
  'hicolor-icon-theme'
  'libglvnd' 'libGLX.so' 'libOpenGL.so'
  'libjpeg' 'libjpeg.so'
  'libnotify' 'libnotify.so'
  'libpng' 'libpng16.so'
  'librsvg' 'librsvg-2.so'
  'libsigc++' 'libsigc-2.0.so'
  'libwnck3'
  'libxml2' 'libxml2.so'
  'libxslt'
  'metacity'
  'pango' 'libpango-1.0.so' 'libpangocairo-1.0.so'
  'protobuf' 'libprotobuf.so'
  'python'
  'python-cairo'
  'python-gobject'
  'xorg-server'
)
makedepends=(
  'boost'
  'cmake'
  'cython'
  'git'
  'intltool'
  'python-setuptools'
)
optdepends=(
  'xorg-xprop: grab various window properties for use in window matching rules'
)
conflicts=(
  'compiz-core'
  'compiz-gtk'
  'compiz-bcop'
  'ccsm'
  'compiz-fusion-plugins-main'
  'compiz-fusion-plugins-extra'
  'compiz-fusion-plugins-experimental'
  'compizconfig-python'
  'libcompizconfig'
  'simple-ccsm'
)
provides=(
  "ccsm=${pkgver:0:8}"
  "compiz-bcop=${pkgver:0:8}"
  "compiz-core=${pkgver:0:8}" 'libcompiz_core.so'
  "compiz-plugins-extra=${pkgver:0:8}"
  "compiz-plugins-main=${pkgver:0:8}"
  "compizconfig-python=${pkgver:0:8}"
  "libcompizconfig=${pkgver:0:8}" 'libcompizconfig.so'
  'libdecoration.so'
)
source=("git+https://git.launchpad.net/${pkgname}#commit=0c09cfca25cd19af50f6918528849172ef53120f" # release-0.9.14.2
        "focus-prevention-disable.patch"
        "gtk-extents.patch"
        "reverse-unity-config.patch"
        "screenshot-launch-fix.patch"
        "no-compile-gschemas.patch")
sha384sums=('SKIP'
            '8261d17f11aa90408a10bb17afb69ed02acd4344bd15a5d8a8c448803a30bdf2a2bd8a608ac42d204e55fd3a47836224'
            'c8a7485141986f2595a62b23bbf511e05ce2e25d73da4444bd741f3ed12d70c9057d5a29c646830fa2d98c27bedb6d0e'
            '7b54cb1bd9182ba3de28feb05e68b7061afc3aecdee27e0db08ab1cd3ed3fd8ce4d0594958bb19be60ca07bfefb17a8f'
            '18c2903341fa1e062e8e4990d7ade57164b495b5350075c72e5db5f1c33b261c804dad2869fb0d15672f12b7fc698381'
            '77b34ef2237c554d0a73d5f48d70ca5da03e42cfb04fed2ea84f4b22c23b44f46d09be70dceded208d2b20a129d5adbb')
b2sums=('SKIP'
        '08cb6c938c827b8a4f138b66b7f429f26a6dac48e9bb5a9bfa27677eaf8c28fc1fa418de2dcd9f12c1f483e6c85b91f53af8fd7fa7bf8317557180f9d95f3d60'
        '11aa0d8ef8c2972585a8eaa23caf205f29e188e0f0bf89cd2334280c15809db2f9c05717c51aa62ffc8868cc97d4cb00d93233f7bb4ae2c0cb9604d127477923'
        'd135066522ca0041aea19eb521b8cb2aef9caddd9b5204aa34f93327ec37bd17696be975281b7e2613e0f5d464b154f1635ecee8a5ee0c04396e58bad6e118c4'
        '083be4a9efec7fdffeb6f81978b0e18489e7853e1276d20a494b364440be892433e6a28c5eb7d7e323963a12d28a960058906081a1ad5fe04690e6dfaf4c3fec'
        '98ed506192fbd23f4a4f1e7a61e9a21bab5e6e050549ca1f4b9b1cd9a5e19928094b17d0e7cc77fba176677d3173ee8c75d78adc98b08a4ba5954df9a1379765')
options=('lto')

#pkgver() {
#    git -C "${pkgname}" describe --tags | sed 's/.%//;s/-0ubuntu1//'
#}

prepare() {
  cd "${pkgname}"

  # Reverse Unity specific configuration patches
  patch -p1 -i "${srcdir}/reverse-unity-config.patch"

  # Set focus prevention level to off which means that new windows will always get focus
  patch -p1 -i "${srcdir}/focus-prevention-disable.patch"

  # Fix incorrect extents for GTK+ tooltips, csd etc
  patch -p1 -i "${srcdir}/gtk-extents.patch"

  # Fix application launching for the screenshot plugin
  patch -p1 -i "${srcdir}/screenshot-launch-fix.patch"

  # Don't try to compile gschemas during make install
  patch -p1 -i "${srcdir}/no-compile-gschemas.patch"
}

build() {
  cmake -B build -S "${pkgname}" \
    -DCMAKE_CXX_STANDARD=17 \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX="/usr" \
    -DCMAKE_INSTALL_LIBDIR="/usr/lib" \
    -DCOMPIZ_DISABLE_SCHEMAS_INSTALL=ON \
    -DCOMPIZ_BUILD_WITH_RPATH=OFF \
    -DCOMPIZ_PACKAGING_ENABLED=ON \
    -DBUILD_GTK=ON \
    -DBUILD_METACITY=ON \
    -DBUILD_KDE4=OFF \
    -DCOMPIZ_BUILD_TESTING=OFF \
    -DCOMPIZ_WERROR=OFF \
    -DCOMPIZ_DEFAULT_PLUGINS="composite,opengl,decor,resize,place,move,compiztoolbox,staticswitcher,regex,animation,wall,ccp"

  make -C build
}

package() {
  DESTDIR="${pkgdir}" make -C build install

  # findcompiz_install needs COMPIZ_DESTDIR and install needs DESTDIR
  # make findcompiz_install
  CMAKE_DIR=$(cmake --system-information | grep '^CMAKE_ROOT' | awk -F\" '{print $2}')
  install -Dm644 "${pkgname}/cmake/FindCompiz.cmake" \
    -t "${pkgdir}${CMAKE_DIR}/Modules/"

  # Add documentation
  install -Dm644 "${pkgname}"/{AUTHORS,NEWS,README} \
    -t "${pkgdir}/usr/share/doc/compiz/"

  # Add the gsettings schema files
  if ls build/generated/glib-2.0/schemas/ | grep -qm1 .gschema.xml; then
    install -Dm644 build/generated/glib-2.0/schemas/*.gschema.xml \
      -t "${pkgdir}/usr/share/glib-2.0/schemas/"
  fi

  # Install licenses
  install -Dm644 "${pkgname}"/{COPYING,COPYING.GPL,COPYING.LGPL,COPYING.MIT} \
    -t "${pkgdir}/usr/share/licenses/${pkgname}/"
}
