# PKGBUILD is based on telegram-desktop by:
# - Sven-Hendrik Haase <svenstaro@archlinux.org>
# - hexchain <i@hexchain.org>

# Maintainer: Albert I <kras@raphielgang.org>

_tdesktop_ver=4.0.1
pkgname=64gram
pkgver=1.0.39
pkgrel=1
pkgdesc='Provide Windows 64bit build with enhancements. Linux/MacOS build is a PLUS!'
arch=('x86_64')
url="https://64gr.am"
license=('GPL3')
depends=('hunspell' 'ffmpeg4.4' 'hicolor-icon-theme' 'lz4' 'minizip' 'openal' 'ttf-opensans'
         'qt6-imageformats' 'qt6-svg' 'qt6-wayland' 'qt6-5compat' 'xxhash' 'glibmm'
         'rnnoise' 'pipewire' 'libxtst' 'libxrandr' 'jemalloc' 'abseil-cpp' 'libdispatch')
makedepends=('cmake' 'git' 'ninja' 'python' 'range-v3' 'tl-expected' 'microsoft-gsl' 'meson'
             'extra-cmake-modules' 'wayland-protocols' 'plasma-wayland-protocols' 'libtg_owt'
             'dos2unix') # well, screw you people who do stuffs on Windows
optdepends=('webkit2gtk: embedded browser features'
            'xdg-desktop-portal: desktop integration')
provides=("telegram-desktop=$_tdesktop_ver")
replaces=('tdesktop-x64' '64gram-desktop')
conflicts=('telegram-desktop' 'forkgram')
source=("https://github.com/TDesktop-x64/tdesktop/releases/download/v${pkgver}/64Gram-${pkgver}-full.tar.gz"
        'fix-tgcalls-cstdint.patch')
b2sums=('7138f2aca2e78964582d0f5d2082038480395eada8f31b2019212df405c2c25429353e61dcfc83c94f72fa74a103bca3e6501ff4ad5de9b0cd4896215b5c29d1'
        'e447ff7fb3f764318e9bde1538e85f9dd6f9eddaa3cc0fb5d6e0025d8f0f463d03ecee361938fe82ddc495ba0adf46c0ed836afa7180a96dcba18674fc806492')

prepare() {
    cd "64Gram-$pkgver-full"

    rm -rf Telegram/ThirdParty/libtgvoip/webrtc_dsp/absl

    # Convert line endings: CRLF -> LF before patching
    dos2unix Telegram/ThirdParty/tgcalls/tgcalls/utils/gzip.h
    patch -Np1 -i "$srcdir"/fix-tgcalls-cstdint.patch -d Telegram/ThirdParty/tgcalls
}

build() {
    cd "64Gram-$pkgver-full"

    # Fix https://bugs.archlinux.org/task/73220
    export CXXFLAGS+=" -Wp,-U_GLIBCXX_ASSERTIONS"

    export PKG_CONFIG_PATH='/usr/lib/ffmpeg4.4/pkgconfig'
    # Turns out we're allowed to use the official API key that telegram uses for their snap builds:
    # https://github.com/telegramdesktop/tdesktop/blob/8fab9167beb2407c1153930ed03a4badd0c2b59f/snap/snapcraft.yaml#L87-L88
    # Thanks @primeos!
    cmake \
        -B build \
        -G Ninja \
        -DCMAKE_INSTALL_PREFIX="/usr" \
        -DCMAKE_BUILD_TYPE=Release \
        -DTDESKTOP_API_ID=611335 \
        -DTDESKTOP_API_HASH=d524b414d21f4d37f08684c1df41ac9c
    sed -i "s|/usr/lib/libav|/usr/lib/ffmpeg4.4/libav|g" build/build.ninja
    sed -i "s|/usr/lib/libsw|/usr/lib/ffmpeg4.4/libsw|g" build/build.ninja
    sed -i "s|-lavcodec|/usr/lib/ffmpeg4.4/libavcodec.so|g" build/build.ninja
    sed -i "s|-lavformat|/usr/lib/ffmpeg4.4/libavformat.so|g" build/build.ninja
    sed -i "s|-lavutil|/usr/lib/ffmpeg4.4/libavutil.so|g" build/build.ninja
    sed -i "s|-lswscale|/usr/lib/ffmpeg4.4/libswscale.so|g" build/build.ninja
    sed -i "s|-lswresample|/usr/lib/ffmpeg4.4/libswresample.so|g" build/build.ninja
    ninja -C build
}

package() {
    cd "64Gram-$pkgver-full"
    DESTDIR="$pkgdir" ninja -C build install
    # They botched the release and put a lot of stuff here.
    rm -rf "$pkgdir/build"
}
