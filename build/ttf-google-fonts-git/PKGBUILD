# Maintainer: Albert I <kras@raphielgang.org>
# Contributor: Andrew Crerar <crerar@archlinux.org>
# Contributor: Mohammadreza Abdollahzadeh <morealaz at gmail dot com>
# Contributor: FadeMind <fademind@gmail.com>
# Contributor: Vlad M. <vlad@archlinux.net>
# Contributor: Sebastian Stammler <stammler.s@gmail.com>
# Contributor: Sarkasper <echo a2FzcGVyLm1lbnRlbkBnbXguY29tCg== | base64 -d>
# Contributor: Daniel Micay <danielmicay@gmail.com>
# Contributor: Michalis Georgiou <mechmg93@gmail.comr>
# Contributor: Alexander De Sousa <archaur.xandy21@spamgourmet.com>

pkgname=ttf-google-fonts-git
pkgver=r7118.g55001b2ef
pkgrel=1
pkgdesc='TrueType fonts from the Google Fonts project (git version)'
arch=('any')
url='https://fonts.google.com'
license=('Apache-2.0 AND OFL-1.0-RFN AND OFL-1.1 AND OFL-1.1-RFN AND OFL-1.1-no-RFN AND LicenseRef-scancode-ubuntu-font-1.0')
# pull these fonts from [extra], and exclude from this package
depends=(
    'adobe-source-code-pro-fonts'
    'adobe-source-sans-fonts'
    'adobe-source-serif-fonts'
    'cantarell-fonts'
    'gentium-plus-font'
    'inter-font'
    'noto-fonts'
    'noto-fonts-extra'
    'ttf-anonymous-pro'
    'ttf-caladea'
    'ttf-carlito'
    'ttf-cormorant'
    'ttf-crimson-pro'
    'ttf-crimson-pro-variable'
    'ttf-croscore'
    'ttf-fira-code'
    'ttf-fira-mono'
    'ttf-fira-sans'
    'ttf-ibm-plex'
    'ttf-inconsolata'
    'ttf-jetbrains-mono'
    'ttf-lato'
    'ttf-opensans'
    'ttf-overpass'
    'ttf-roboto'
    'ttf-roboto-mono'
    'ttf-ubuntu-font-family'
)
makedepends=(
    'fontconfig'
    'git'
)
# other fonts on available AUR that we seek to provide
gfonts_pkgs=(
   'jsmath-fonts'
   'lohit-fonts'
   'lora-font-git'
   'ttf-andika'
   'ttf-arabeyes-fonts'
   'ttf-cardo'
   'ttf-comfortaa'
   'ttf-commissioner-variable'
   'ttf-google-fonts-typewolf'
   'ttf-lora-cyrillic'
   'ttf-lekton'
   'ttf-medievalsharp'
   'ttf-merriweather'
   'ttf-merriweather-sans'
   'ttf-nova'
   'ttf-oswald'
   'ttf-oxygen'
   'ttf-oxygen-git'
   'ttf-pt-fonts'
   'ttf-quintessential'
   'ttf-signika'
   'ttf-volkorn'
   'ttf-work-sans-variable'
   #'ttf-yrsa'
   'ttf-zilla-slab'
)
conflicts=("${gfonts_pkgs[@]}")
provides=("${gfonts_pkgs[@]}")
source=(git+https://github.com/google/fonts.git)
sha256sums=('SKIP')

pkgver() {
  cd fonts

  printf 'r%s.g%s' "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  local variable_fonts_only=(
    inconsolata
    roboto
  )

  # NOTE: Adobe Blank is not meant to be installed.
  # See: https://github.com/google/fonts/issues/2106#issuecomment-520067314
  rm --recursive "${srcdir}/fonts/ofl/adobeblank"

  cd fonts/ofl
  local files
  # NOTE: These are the font families that already exist in [extra]
  ## Noto font families
  files=($(find -maxdepth 1 -iname 'noto*'))
  for i in "${files[@]}"; do
    [[ ${i} =~ thailooped ]] && continue
    rm -r "${i}"
  done

  ## IBM Plex font families
  find -maxdepth 1 -iname 'ibmplex*' -exec rm -r {} \;

  ## Ubuntu font family
  rm -r "${srcdir}/fonts/ufl"

  ## Fonts where only static variants are packaged in [extra]
  for font_family in "${variable_fonts_only[@]}"; do
    find -maxdepth 1 -name "${font_family}" -exec rm -r {}/static \; 2>/dev/null
  done
}

package() {
  # NOTE: These are the font families that already exist in [extra]
  declare -A omitted_font_families=(
    [anonymous-pro]=1
    [arimo]=1
    [caladea]=1
    [cantarell]=1
    [carlito]=1
    [cormorant-garamond]=1
    [cormorant-infant]=1
    [cormorant-sc]=1
    [cormorant-unicase]=1
    [cormorant-upright]=1
    [cousine]=1
    [crimson-pro]=1
    [fira-mono]=1
    [fira-sans]=1
    [fira-sans-condensed]=1
    [gentium-book-plus]=1
    [gentium-plus]=1
    [lato]=1
    [roboto-mono]=1
    [source-code-pro]=1
    [source-sans-3]=1
    [source-serif-4]=1
    [tinos]=1
    # do not omit the following fonts due to being provided as variable-only
    # but they are added to package dependencies to allow co-existence with static version
    # [cormorant]=1
    # [fira-code]=1
    # [inter]=1
    # [jetbrains-mono]=1
    # [open-sans]=1
    # [overpass]=1
  )


  while IFS= read -rd '' file; do
    font_family=$(fc-query -f '%{family[0]|downcase|translate( ,-)}\n' "${file}" | sed -n '1p')

    # NOTE: Skip the rest of the loop if we're not supposed to be touching this family
    ((omitted_font_families["${font_family}"])) && continue

    pkg_font_path="${pkgdir}/usr/share/fonts/${font_family}"
    # TODO: Check and make sure ${font_family} is being created
    install -Dm644 "${file}" -t "${pkg_font_path}"

    # NOTE: If the font's license already exists, we don't need to copy the license again
    src_license_path="${file%/*}/OFL.txt"
    pkg_font_license="${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.$font_family"
    if [[ -f "${src_license_path}" && ! -f "${pkg_font_license}" ]]; then
      install -Dm644 "${src_license_path}" "${pkg_font_license}"
    fi
  done < <(find "${srcdir}" -type f -iname '*.ttf' -print0)

  # NOTE: Since the zcool xiaowei chinese font has special characters, we need to change
  # the folder name to prevent errors during package compression.
  mv "${pkgdir}/usr/share/fonts/站酷小薇体" "${pkgdir}/usr/share/fonts/zcool-xiaowei-regular"
  mv "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.站酷小薇体" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.zcool-xiaowei-regular"
}
